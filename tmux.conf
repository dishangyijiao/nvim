# ===========================================
# tmux配置 - 高效开发环境
# ===========================================

# 基本设置
# ===========================================
set -g default-terminal "screen-256color"  # 开启256色支持
set -g history-limit 20000                 # 历史记录大小
set -g buffer-limit 20                     # 缓冲区大小
set -g display-time 1500                   # 消息显示时间
set -g remain-on-exit off                  # 面板关闭时退出tmux
set -g mouse on                            # 启用鼠标
set -g renumber-windows on                 # 重新编号窗口
set -g set-clipboard on                    # 系统剪贴板支持

# 修改前缀键为Ctrl+a（更符合人体工程学，更容易按到）
# ===========================================
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# 窗格分割
# ===========================================
bind | split-window -h -c "#{pane_current_path}"    # 水平分割 |
bind - split-window -v -c "#{pane_current_path}"    # 垂直分割 -
unbind '"'
unbind %

# Vim风格窗格导航
# ===========================================
bind h select-pane -L    # 左
bind j select-pane -D    # 下
bind k select-pane -U    # 上
bind l select-pane -R    # 右

# 窗格调整大小（以5个单位为增量）
# ===========================================
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# 窗口管理
# ===========================================
bind c new-window -c "#{pane_current_path}"  # 创建新窗口
bind , command-prompt -I "#W" "rename-window '%%'"  # 重命名窗口
bind > swap-window -t +1  # 向后移动窗口
bind < swap-window -t -1  # 向前移动窗口

# 会话管理
# ===========================================
bind S command-prompt -p "New Session:" "new-session -A -s '%%'"  # 创建/附加会话
bind X confirm-before -p "Kill #S (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"'"  # 关闭会话

# 复制模式（Vim风格）
# ===========================================
setw -g mode-keys vi  # 使用vi按键绑定
bind -T copy-mode-vi v send -X begin-selection  # 'v'开始选择
bind -T copy-mode-vi y send -X copy-selection   # 'y'复制选择
bind -T copy-mode-vi r send -X rectangle-toggle  # 'r'矩形选择
bind Escape copy-mode  # Esc 进入复制模式

# 便捷键
# ===========================================
bind r source-file ~/.tmux.conf \; display "配置已重新加载!"  # 重新加载配置
bind m setw synchronize-panes  # 同步所有窗格（输入同步到所有窗格）

# 状态栏设置
# ===========================================
set -g status-position bottom
set -g status-style fg=colour136,bg=colour235
set -g status-left '#[fg=green]#S '
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style fg=colour81,bg=colour238,bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-style fg=colour138,bg=colour235
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

# 插件设置
# ===========================================
# 智能窗格切换与Neovim集成
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# 插件管理
# ===========================================
# 首先安装 tmux 插件管理器
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# 插件列表
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# 配置自动保存和恢复
set -g @continuum-restore 'on'
set -g @continuum-save-interval '10'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'

# 初始化插件管理器（保持在配置文件末尾）
run '~/.tmux/plugins/tpm/tpm'
